[user]
	name = Kyle Boon
  email = kyle.boon@target.com
[core]
	editor = vim
[merge]
  tool = vim
[alias]
  co = checkout
  # Log display from screencast, with train tracks.
  l = log --graph --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %C(white) %an, %ar%Creset'
  # Alternate log display from Scott Chacon
  lol = log --pretty=oneline --abbrev-commit --graph --decorate
  # Other useful aliases:
  current-branch = !git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'
  track = checkout -t
  aa = add --all
  ap = add --patch
  branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
  ca = commit --amend -v
  ci = commit -v
  co-pr = !sh -c 'git fetch origin pull/$1/head:pr/$1 && git checkout pr/$1' -
  create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git branch -D $1' -
  rename-branch = !sh -c 'old=$(git current-branch) && git branch -m $old $1 && git push origin --set-upstream $1 && git push origin --delete $old' -
  up = !git fetch origin && git rebase origin/master

[apply]
  whitespace = warn

[color]
  diff = auto
  status = auto
  branch = auto
  ui = true

[help]
  autocorrect = 1

[status]
  submodule = 1

[push]
  # Only push branches that have been set up to track a remote branch.
  default = current
  autocrlf = input
[merge]
  ff = only
[commit]
  template = ~/.gitmessage
[fetch]
  prune = true
