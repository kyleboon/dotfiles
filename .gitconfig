[user]
  name = Kyle Boon
  editor = nvim
	email = kyle.f.boon@gmail.com
[merge]
  tool = nvim
[alias]
  co = checkout
  # Log display from screencast, with train tracks.
  l = log --graph --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %C(white) %an, %ar%Creset'
  current-branch = !git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'
  track = checkout -t
  aa = add --all
  ap = add --patch
  branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
  ammend = commit --amend -v
  ci = commit -v
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git branch -D $1' -
  rename-branch = !sh -c 'old=$(git current-branch) && git branch -m $old $1 && git push origin --set-upstream $1 && git push origin --delete $old' -
  up = !sh -c 'git fetch origin && git rebase origin/$(git default-branch)'
  frbi = "!f() { git rebase -i $(git log --pretty=oneline --color=always | fzf --ansi | cut -d ' ' -f1)^ ; }; f"
  sw = !git checkout $(git branch -a --format '%(refname:short)' | sed 's~origin/~~' | sort | uniq | fzf)
  last = log -1 HEAD --stat
  st = status -sb
  se = !git rev-list --all | xargs git grep -F
  default-branch="!git symbolic-ref refs/remotes/origin/HEAD | awk -F'/' '{print $NF}'"
  default-branch-prime="!git symbolic-ref refs/remotes/prime/HEAD | awk -F'/' '{print $NF}'"
  # create a new feature branch starting from origin/<main> that tracks it, and switch to it
  nbm = !sh -c 'git checkout -B $(git config target.shortname)-$1 origin/$(git default-branch) && git branch -u origin/$(git default-branch) $(git config target.shortname)-$1' -

[apply]
  whitespace = warn

[color]
  diff = auto
  status = auto
  branch = auto
  ui = auto

[help]
  autocorrect = 1

[status]
  submodule = 1

[push]
  # Only push branches that have been set up to track a remote branch.
  default = current
  autocrlf = input
[merge]
  ff = only
[commit]
  template = ~/.gitmessage
[fetch]
  prune = true
[init]
  defaultBranch = main
[pull]
  ff = only
